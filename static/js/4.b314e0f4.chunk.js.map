{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","activeClassName","activeLink","name","Message","message","maxLenght100","maxLenghtCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","sendBtn","size","Dialogs","state","messagesPage","dialogsElements","dialogData","map","d","key","messagesElements","messagesData","m","dialogs","dialogsItems","messages","values","sendMessage","newMessageBody","compose","connect","isAuth","auth","dispatch","sendMessageCreator","Component","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,wBAAwB,WAAa,4BAA4B,KAAO,sBAAsB,QAAU,2B,+FCYzOC,EATI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,yBAAKC,UAAS,UAAKC,IAAEC,OAAP,YAAiBD,IAAEE,SAC7B,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,IAAEK,YAAaT,EAAMU,QCEtDC,EAPC,SAACX,GACb,OACI,6BACI,yBAAKG,UAAWC,IAAEQ,SAAUZ,EAAMY,W,iCC6B1CC,EAAeC,YAAiB,KAmB9BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAjBL,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOjB,UAAWC,IAAEa,KACbI,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,wBAEvB,6BACI,4BAAQtB,UAAWC,IAAEsB,QAASC,KAAK,MAAnC,aAQDC,EAhDC,SAAC5B,GAEb,IAAI6B,EAAQ7B,EAAM8B,aAEdC,EAAkBF,EAAMG,WAAWC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMyB,IAAKD,EAAEhC,GAAIA,GAAIgC,EAAEhC,QACvFkC,EAAmBP,EAAMQ,aAAaJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAAS1B,QAAS0B,EAAE1B,QAASuB,IAAKG,EAAEpC,QAQvF,OACI,yBAAKC,UAAWC,IAAEmC,SACd,yBAAKpC,UAAWC,IAAEoC,cACbT,GAEL,yBAAK5B,UAAWC,IAAEqC,UACd,6BACML,GAEN,kBAACrB,EAAD,CAAqBG,SAdb,SAACwB,GACjB1C,EAAM2C,YAAYD,EAAOE,sB,+DCKlBC,sBACXC,aAjBkB,SAACjB,GACnB,MAAO,CACHC,aAAcD,EAAMC,aACpBiB,OAAQlB,EAAMmB,KAAKD,WAIF,SAACE,GACtB,MAAO,CACHN,YAAa,SAACC,GACVK,EAASC,YAAmBN,UCbR,SAACO,GAS7B,OAT2C,iLAInC,OAAKC,KAAKpD,MAAM+C,OACT,kBAACI,EAAcC,KAAKpD,OADI,kBAAC,IAAD,CAAUO,GAAI,eAJV,GAEX8C,IAAMF,aDiB3BN,CAGbjB","file":"static/js/4.b314e0f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsItems\":\"Dialogs_dialogsItems__39Jay\",\"messages\":\"Dialogs_messages__z5X_Z\",\"message\":\"Dialogs_message__1lQ3b\",\"dialog\":\"Dialogs_dialog__2dcCJ\",\"activeLink\":\"Dialogs_activeLink__P7IeN\",\"form\":\"Dialogs_form__3CI5l\",\"sendBtn\":\"Dialogs_sendBtn__1xT63\"};","import React from 'react';\nimport s from '../Dialogs.module.css';\nimport {NavLink} from 'react-router-dom';\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/' + props.id;\n    return (\n        <div className={`${s.dialog} ${s.active}`}>\n            <NavLink to={path} activeClassName={s.activeLink}>{props.name}</NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;","import React from 'react';\nimport s from \"../Dialogs.module.css\";\n\nconst Message = (props) => {\n    return (\n        <div>\n            <div className={s.message}>{props.message}</div>\n        </div>\n    )\n};\nexport default Message;","import React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLenghtCreator, required} from \"../../helpers/validators/validators\";\n\nconst Dialogs = (props) => {\n\n    let state = props.messagesPage;\n\n    let dialogsElements = state.dialogData.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let messagesElements = state.messagesData.map(m => <Message message={m.message} key={m.id}/>);\n\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {dialogsElements}\n            </div>\n            <div className={s.messages}>\n                <div>\n                    { messagesElements }\n                </div>\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n};\nlet maxLenght100 = maxLenghtCreator(100);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field className={s.form}\n                       component={Textarea}\n                       validate={[required, maxLenght100]}\n                       name='newMessageBody'\n                       placeholder='Enter your message'/>\n            </div>\n            <div>\n                <button className={s.sendBtn} size=\"sm\">Send</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddMessageFormRedux = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm);\n\nexport default Dialogs;","import {sendMessageCreator} from '../../redux/message-reducer';\nimport Dialogs from './Dialogs';\nimport {connect} from 'react-redux';\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage,\n        isAuth: state.auth.isAuth\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n};\n\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs)\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>;\n            return <Component {...this.props}/>\n        }\n    }\n\n    return RedirectComponent;\n};"],"sourceRoot":""}